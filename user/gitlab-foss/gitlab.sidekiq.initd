#!/sbin/openrc-run

supervisor=supervise-daemon
extra_started_commands="finish reopen"

name="GitLab Sidekiq"
description="GitLab backgroud workers"
description_finish="Stop fetching new jobs and finish current ones"
description_reopen="Reopen log files"

: ${gitlab_base:="/usr/lib/bundles/gitlab"}
: ${sidekiq_config:="/etc/gitlab/sidekiq_queues.yml"}
: ${sidekiq_logfile:="/var/log/gitlab/sidekiq.log"}
: ${sidekiq_memkiller_max_rss:="976"}  # default per Omnibus
: ${sidekiq_memkiller_grace_time:=}
: ${sidekiq_memkiller_shutdown_wait:=}

command="$gitlab_base/bin/sidekiq"
command_args="-C $sidekiq_config"

user="git"
supervise_daemon_args="
	--chdir $gitlab_base
	--user $user
	--stdout $sidekiq_logfile
	--stderr $sidekiq_logfile
	--env RAILS_ENV=production
	--env SIDEKIQ_MEMORY_KILLER_MAX_RSS=$(( sidekiq_memkiller_max_rss * 1024 ))
	--env SIDEKIQ_MEMORY_KILLER_GRACE_TIME=$sidekiq_memkiller_grace_time
	--env SIDEKIQ_MEMORY_KILLER_SHUTDOWN_WAIT=$sidekiq_memkiller_shutdown_wait
	"
pidfile="/run/gitlab/sidekiq.pid"

depend() {
	need redis
	use net postgresql
}

start_pre() {
	checkpath -d -m 755 -o $user "${pidfile%/*}"
	checkpath -f -m 644 -o $user "$sidekiq_logfile"
}

finish() {
	ebegin "Telling $name to stop fetching new jobs"
	kill -TSTP $(head -n1 $pidfile)
	eend $?
}

reopen() {
	ebegin "Telling $name to reopen log files"
	kill -USR2 $(head -n1 $pidfile)
	eend $?
}

optif() {
	test -n "$2" && printf '%s/n' "$1=$2" || true
}
