#!/sbin/openrc-run

extra_started_commands="reopen"

name="GitLab Workhorse"
description="A reverse proxy for GitLab."
description_reopen="Reopen log files"

: ${gitlab_base:="/usr/lib/bundles/gitlab"}
: ${workhorse_listen:="0.0.0.0:8080"}
: ${workhorse_logfile:="/var/log/gitlab/workhorse.log"}
: ${workhorse_access_log:="no"}

command="/usr/bin/gitlab-workhorse"
# Note: The rest of the options is set in start_pre().
command_args="
	-authBackend=http://${unicorn_listen_tcp:="127.0.0.1:8181"}
	-documentRoot=${gitlab_public_dir:="$gitlab_base/public"}
	-listenAddr=$workhorse_listen
	-listenUmask=${workhorse_listen_umask:="000"}
	-logFile=$workhorse_logfile
	-secretPath=${workhorse_secret_path:="/etc/gitlab/gitlab-workhorse.secret"}"
command_background="yes"

user="git"
start_stop_daemon_args="
	--chdir $gitlab_base
	--user $user"
pidfile="/run/gitlab-workhorse.pid"


depend() {
	use net
}

start_pre() {
	local listen_net="tcp"
	[ "${workhorse_listen:0:1}" = '/' ] && listen_net="unix"

	command_args="$command_args
		-listenNetwork=$listen_net
		$(optif -apiCiLongPollingDuration "$workhorse_ci_long_polling_duration")
		$(optif -apiLimit "$workhorse_api_limit")
		$(optif -apiQueueDuration "$workhorse_api_queue_duration")
		$(optif -apiQueueLimit "$workhorse_api_queue_limit")
		$(optif -authSocket "$unicorn_listen_unix")
		$(optif -config "$workhorse_config")
		$(optif -proxyHeadersTimeout "$workhorse_proxy_header_timeout")"
	yesno "$workhorse_access_log" || command_args="$command_args -disableAccessLog"

	start_stop_daemon_args="$start_stop_daemon_args
		$(optif '--env GITLAB_WORKHORSE_SENTRY_DSN' "$workhorse_sentry_dns")"

	[ "$listen_net" = "unix" ] && checkpath -m 750 -o $user -d "${workhorse_listen%/*}"
	checkpath -m 640 -o $user -f "$workhorse_logfile"
}

reopen() {
	ebegin "Telling $name to reopen log files"
	kill -HUP $(head -n1 $pidfile)
	eend $?
}

optif() {
	test -n "$2" && printf '%s/n' "$1=$2" || true
}
