Make all the projects created from the teams owned by the admin user
and remove legacy team users.

--- a/hc/accounts/migrations/0018_auto_20190112_1426.py
+++ b/hc/accounts/migrations/0018_auto_20190112_1426.py
@@ -9,8 +9,8 @@
     Member = apps.get_model("accounts", "Member")
     for profile in Profile.objects.all():
         project = Project()
-        project.name = profile.team_name
-        project.owner_id = profile.user_id
+        project.name = profile.team_name or "Personal"
+        project.owner_id = 1 if profile.team_name else profile.user_id  # XXX: make admin owner of all migrated teams
         project.api_key = profile.api_key
         project.api_key_readonly = profile.api_key_readonly
         project.save()
--- a/hc/accounts/migrations/0020_auto_20190112_1950.py
+++ b/hc/accounts/migrations/0020_auto_20190112_1950.py
@@ -5,8 +5,12 @@
 
 def set_badge_key(apps, schema_editor):
     Project = apps.get_model("accounts", "Project")
+    Profile = apps.get_model("accounts", "Profile")
     for project in Project.objects.select_related("owner").all():
-        project.badge_key = project.owner.username
+        if Profile.objects.filter(team_name=project.name).exists():
+            project.badge_key = project.name
+        else:
+            project.badge_key = project.owner.username
         project.save()
 
 
--- a/hc/accounts/migrations/0024_auto_20190119_1540.py
+++ b/hc/accounts/migrations/0024_auto_20190119_1540.py
@@ -1,15 +1,26 @@
 # Generated by Django 2.1.5 on 2019-01-19 15:40
 
+from django.conf import settings
 from django.db import migrations
 
 
+def delete_team_users(apps, schema_editor):
+    Profile = apps.get_model("accounts", "Profile")
+    for profile in Profile.objects.exclude(team_name__exact=''):
+        profile.user.delete()
+
+
 class Migration(migrations.Migration):
+    atomic = False
 
     dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
         ('accounts', '0023_auto_20190117_1419'),
+        ('api', '0057_auto_20190118_1319'),
     ]
 
     operations = [
+        migrations.RunPython(delete_team_users, migrations.RunPython.noop, atomic=False),
         migrations.RemoveField(
             model_name='profile',
             name='current_team',
--- a/hc/api/migrations/0055_auto_20190112_1427.py
+++ b/hc/api/migrations/0055_auto_20190112_1427.py
@@ -5,11 +5,19 @@
 
 def fill_project_id(apps, schema_editor):
     Project = apps.get_model("accounts", "Project")
+    Profile = apps.get_model("accounts", "Profile")
     Check = apps.get_model("api", "Check")
     Channel = apps.get_model("api", "Channel")
     for project in Project.objects.all():
         Check.objects.filter(user_id=project.owner_id).update(project=project)
         Channel.objects.filter(user_id=project.owner_id).update(project=project)
+    for profile in Profile.objects.exclude(team_name__exact=''):
+        try:
+            project = Project.objects.get(name=profile.team_name)
+            Check.objects.filter(user_id=profile.user_id).update(project=project)
+            Channel.objects.filter(user_id=profile.user_id).update(project=project)
+        except Project.DoesNotExist:
+            pass
 
 
 class Migration(migrations.Migration):
